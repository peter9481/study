{
  "name": "electron-packager",
  "version": "4.2.0",
  "description": "package your electron app in OS executables (.app, .exe, etc) via JS or CLI",
  "main": "index.js",
  "bin": {
    "electron-packager": "cli.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/maxogden/electron-packager.git"
  },
  "author": {
    "name": "max ogden"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/maxogden/electron-packager/issues"
  },
  "homepage": "https://github.com/maxogden/electron-packager",
  "dependencies": {
    "asar": "^0.6.1",
    "electron-download": "^1.0.0",
    "extract-zip": "^1.0.3",
    "minimist": "^1.1.1",
    "mkdirp": "^0.5.0",
    "mv": "^2.0.3",
    "ncp": "^2.0.0",
    "plist": "^1.1.0",
    "rcedit": "^0.3.0",
    "rimraf": "^2.3.2"
  },
  "devDependencies": {
    "standard": "^3.3.2",
    "tape": "^4.0.0"
  },
  "scripts": {
    "test": "standard && node test/test.js"
  },
  "standard": {
    "ignore": [
      "test/dist"
    ]
  },
  "readme": "# electron-packager\n\nPackage your electron app in OS executables (.app, .exe, etc) via JS or CLI. Supports building Windows, Linux or Mac executables.\n\n*formerly known as atom-shell-packager*\n\n[![NPM](https://nodei.co/npm/electron-packager.png)](https://nodei.co/npm/electron-packager/)\n\n[![Build Status](https://travis-ci.org/maxogden/electron-packager.svg?branch=master)](https://travis-ci.org/maxogden/electron-packager)\n\n### installation\n\n```\n# for use in npm scripts\nnpm i electron-packager --save-dev\n\n# for use from cli\nnpm i electron-packager -g\n```\n\n### usage\n\n```\nUsage: electron-packager <sourcedir> <appname> --platform=<platform> --arch=<arch> --version=<version>\n  \nRequired options\n\nplatform           linux, win32, darwin\narch               ia32, x64\nversion            see https://github.com/atom/electron/releases\n                  \nExample            electron-packager ./ FooBar --platform=darwin --arch=x64 --version=0.25.1\n\nOptional options\n\nout                the dir to put the app into at the end. defaults to current working dir\nicon               the icon file to use as the icon for the app\napp-bundle-id      bundle identifier to use in the app plist\napp-version        version to set for the app\nhelper-bundle-id   bundle identifier to use in the app helper plist\nignore             do not copy files into App whose filenames regex .match this string\nprune              runs `npm prune --production` on the app\nasar               packages the source code within your app into an archive\nsign               should contain the identity to be used when running `codesign` (OS X only)\nversion-string     should contain a hash of the application metadata to be embedded into the executable (Windows only). Keys supported\n                   - CompanyName\n                   - LegalCopyright\n                   - FileDescription\n                   - OriginalFilename\n                   - FileVersion\n                   - ProductVersion\n                   - ProductName\n                   - InternalName\n                   \n\n```\n\nThis will:\n\n- Find or download the correct release of Electron\n- Use that version of electron to create a app in `<out>/<appname>-<platform>`\n\nYou should be able to launch the app on the platform you built for. If not, check your settings and try again.\n\n**Be careful** not to include node_modules you don't want into your final app. `electron-packager`, `electron-prebuilt` and `.git` will be ignored by default. You can use `--ignore` to ignore files and folders, e.g. `--ignore=node_modules/electron-packager` or `--ignore=\"node_modules/(electron-packager|electron-prebuilt)\"`.\n\n### API\n```javascript\nvar packager = require('electron-packager')\npackager(opts, function done (err, appPath) { })\n```\n#### packager(opts, callback)\n\n##### opts\n**Required**  \n`dir` - *String*  \nThe source directory.\n\n`name` - *String*  \nThe application name.\n\n`platform` - *String*  \nAllowed values: *linux, win32, darwin*\n\n`arch` - *String*  \nAllowed values: *ia32, x64*\n\n`version` - *String*  \nElectron version (without the 'v'). See https://github.com/atom/electron/releases\n\n**Optional**  \n`out` - *String*\n\n`icon` - *String*\n\n`app-bundle-id` - *String*\n\n`app-version` - *String*\n\n`helper-bundle-id` - *String*\n\n`ignore` - *String*\n\n`prune` - *Boolean*\n\n`asar` - *Boolean*\n\n`sign` - *String*\n\n##### callback\n\n`err` - *Error*  \nContains errors if any.\n\n`appPath` - *String*  \nPath to the newly created application.\n\n### Building windows apps from non-windows platforms\n\nIf you run this on windows and you want to set the icon for your app using the `--icon` option, it requires running a thing called `rcedit.exe` (via [this](https://github.com/atom/node-rcedit)), which means you will need to install `wine` and have it available in your path. To do this on Mac OS you can `brew install wine`.\n\n### related\n\n- [grunt-electron](https://github.com/sindresorhus/grunt-electron) - grunt plugin for electron-packager\n",
  "readmeFilename": "readme.md",
  "_id": "electron-packager@4.2.0",
  "_from": "electron-packager@>=4.1.3 <5.0.0"
}
